<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>重要图书归档</title>
    <link href="/2023/04/12/%E9%87%8D%E8%A6%81%E5%9B%BE%E4%B9%A6%E5%BD%92%E6%A1%A3/"/>
    <url>/2023/04/12/%E9%87%8D%E8%A6%81%E5%9B%BE%E4%B9%A6%E5%BD%92%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<h2 id="精神家园"><a href="#精神家园" class="headerlink" title="精神家园"></a>精神家园</h2><ul><li><a href="/2023/04/12/%E9%87%8D%E8%A6%81%E5%9B%BE%E4%B9%A6%E5%BD%92%E6%A1%A3/%E3%80%8A%E5%8C%97%E4%BA%AC%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6%E7%8C%AB%E5%92%AA%E5%9B%BE%E9%89%B4%E3%80%8B%E6%A2%81%E7%80%9A.pdf">交大猫猫图鉴</a>(作者：梁瀚)</li></ul><p><img src="/2023/04/12/%E9%87%8D%E8%A6%81%E5%9B%BE%E4%B9%A6%E5%BD%92%E6%A1%A3/image-20230412184829519.png" alt="image-20230412184829519"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Archive</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test-pic</title>
    <link href="/2023/04/11/test-pic/"/>
    <url>/2023/04/11/test-pic/</url>
    
    <content type="html"><![CDATA[<p><img src="/2023/04/11/test-pic/1.png" alt="1" title="test-pic"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用Hexo时用asset-link插入图片</title>
    <link href="/2023/04/11/%E4%BD%BF%E7%94%A8Hexo%E6%97%B6%E7%94%A8asset-link%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/"/>
    <url>/2023/04/11/%E4%BD%BF%E7%94%A8Hexo%E6%97%B6%E7%94%A8asset-link%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</url>
    
    <content type="html"><![CDATA[<h2 id="现有的图片插件asset-img的问题"><a href="#现有的图片插件asset-img的问题" class="headerlink" title="现有的图片插件asset-img的问题"></a>现有的图片插件asset-img的问题</h2><p>asset-img的用处就是将makrdown文件中的图片链接转化为静态网页中的图片链接，而因为其固有设置（实际上该项目已经不再维护），它需要以以下形式插入图片：</p><p><img src="/2023/04/11/%E4%BD%BF%E7%94%A8Hexo%E6%97%B6%E7%94%A8asset-link%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/image-20230412113103238.png" alt="image-20230412113103238"></p><p>此处我插入显示我node.js版本号的图片，虽然满足了asset-img的路径要求，但我的markdown文档就算不是所见即所得的了，这十分不便。</p><h2 id="新一代插件asset-link的妙用"><a href="#新一代插件asset-link的妙用" class="headerlink" title="新一代插件asset-link的妙用"></a>新一代插件asset-link的妙用</h2><p>完整的<a href="/2023/04/11/%E4%BD%BF%E7%94%A8Hexo%E6%97%B6%E7%94%A8asset-link%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/README.pdf">README</a></p><p><img src="/2023/04/11/%E4%BD%BF%E7%94%A8Hexo%E6%97%B6%E7%94%A8asset-link%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/image-20230412111413849.png" alt="image-20230412111413849"></p><p>直接查看其官方文档，可以看到它不仅让编辑md文件时所见即所得，还利索的解决了图片路径转换的问题。如上所述，它还能贴pdf文档的链接，大大拓展了博客的边界。</p><p><img src="/2023/04/11/%E4%BD%BF%E7%94%A8Hexo%E6%97%B6%E7%94%A8asset-link%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/image-20230412111605432.png" alt="image-20230412111605432"></p><p>使用asset-link时插入图片如图所示。</p><h2 id="Typora相关设置"><a href="#Typora相关设置" class="headerlink" title="Typora相关设置"></a>Typora相关设置</h2><p>为了愉快地编写博客，我们还需要对Typora做相关设置，使得我们的图片文件自动地存储在同目录同名文件夹中，这样就可以专注于md文章，而无需费力调整图片链接了。</p><p><img src="/2023/04/11/%E4%BD%BF%E7%94%A8Hexo%E6%97%B6%E7%94%A8asset-link%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/image-20230412113202044.png" alt="image-20230412113202044"></p><p>这样，每次引入图片，图片都会复制一份到同目录同名文件夹中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;filename&#125;</span><br></pre></td></tr></table></figure><p>表示当前文件名，<code>.</code>代表当前路径，<code>/</code>代表路径下的某一个目录。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Learning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Hexo配置个人博客</title>
    <link href="/2023/04/11/%E4%BD%BF%E7%94%A8Hexo%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/04/11/%E4%BD%BF%E7%94%A8Hexo%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="使用Hexo配置个人博客"><a href="#使用Hexo配置个人博客" class="headerlink" title="使用Hexo配置个人博客"></a>使用Hexo配置个人博客</h1><h2 id="下载Hexo"><a href="#下载Hexo" class="headerlink" title="下载Hexo"></a>下载Hexo</h2><h3 id="安装node-js和npm"><a href="#安装node-js和npm" class="headerlink" title="安装node.js和npm"></a>安装node.js和npm</h3><p>从<a href="https://nodejs.org/en">Node.js官网</a>下载对应平台的安装程序，网速慢的童鞋请移步国内镜像。</p><p>查看node.js版本:</p><p><code>win+r</code>打开运行输入cmd，然后键入<code>node -v</code>查看版本号</p><p><img src="/2023/04/11/%E4%BD%BF%E7%94%A8Hexo%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1.png" alt="1"></p><p>可以看到我的node.js版本为16.19.1</p><p>同样输入<code>npm-v</code>可以查看npm版本号。</p><p><img src="/2023/04/11/%E4%BD%BF%E7%94%A8Hexo%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/2.png" alt="2"></p><p>可以看到我的npm版本号是8.19.3</p><p>一般来说npm在安装node.js的时候已经安装好了。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>使用npm在预留安装hexo的文件夹中一键安装hexo：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>Mac 用户需要管理员权限（sudo），运行这条命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装时间有点久，界面也没任何反应，<strong>耐心等待</strong>，安装完成后如下图。</p><p><img src="/2023/04/11/%E4%BD%BF%E7%94%A8Hexo%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/3.png" alt="image-20230411165153062"></p><p>这是GitBash界面，myblog是我预留的安装文件夹。</p><p><strong>初始化并安装所需组件：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init      # 初始化</span><br><span class="line">npm install    # 安装组件</span><br></pre></td></tr></table></figure><p>完成后应该如下图所示：</p><p><img src="/2023/04/11/%E4%BD%BF%E7%94%A8Hexo%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/3.png" alt="image-20230411165419310"></p><p>完成后依次输入下面命令，<strong>启动本地服务器进行预览</strong>：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g   # 生成页面</span><br><span class="line">hexo s   # 启动预览</span><br></pre></td></tr></table></figure><p><strong>访问</strong> <code>http://localhost:4000</code><strong>，出现 Hexo 默认页面，本地博客安装成功！</strong></p><p><img src="/2023/04/11/%E4%BD%BF%E7%94%A8Hexo%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/4.png" alt="image-20230411165430501"></p><h2 id="部署-Hexo-到-GitHub-Pages"><a href="#部署-Hexo-到-GitHub-Pages" class="headerlink" title="部署 Hexo 到 GitHub Pages"></a>部署 Hexo 到 GitHub Pages</h2><p>本地博客测试成功后，就是上传到 GitHub 进行部署，使其能够在网络上访问。</p><h3 id="设置SSH连接"><a href="#设置SSH连接" class="headerlink" title="设置SSH连接"></a>设置SSH连接</h3><p>右键 -&gt; Git Bash Here，<strong>设置用户名和邮箱</strong>：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class="line">git config --global user.email &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure><p><strong>创建 SSH 密匙</strong>：</p><p>输入 <code>ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;</code>，然后一路回车。</p><p><strong>添加密匙：</strong></p><p>进入 [C:\Users\用户名.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。</p><p>登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key。</p><p>Title 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSH key 完成添加。</p><p><img src="/2023/04/11/%E4%BD%BF%E7%94%A8Hexo%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/5.png" alt="image-20230411171332609"></p><p>打开 Git Bash，输入 <code>ssh -T git@github.com</code> 出现 “Are you sure……”，输入 yes 回车确认。</p><p>显示 “Hi xxx! You’ve successfully……” 即连接成功。</p><p><img src="/2023/04/11/%E4%BD%BF%E7%94%A8Hexo%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/6.png" alt="image-20230411172240841"></p><h3 id="创建GitHub仓库"><a href="#创建GitHub仓库" class="headerlink" title="创建GitHub仓库"></a>创建GitHub仓库</h3><p>GitHub 主页右上角加号 -&gt; New repository：</p><ul><li>Repository name 中输入 <code>用户名.github.io</code></li><li>勾选 “Initialize this repository with a README”</li><li>Description 选填</li></ul><p>填好后点击 Create repository 创建。</p><p>本地博客测试成功后，就是上传到 GitHub 进行部署，使其能够在网络上访问。</p><p>首先<strong>安装 hexo-deployer-git</strong>：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后<strong>修改 _config.yml</strong> 文件末尾的 Deployment 部分，修改成如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:用户名/用户名.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>完成后运行 <code>hexo d</code> 将网站上传部署到 GitHub Pages。</p><p>完成！这时访问我们的 GitHub 域名 <code>https://用户名.github.io</code> 就可以看到 Hexo 网站了。</p><p><img src="/2023/04/11/%E4%BD%BF%E7%94%A8Hexo%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/7.png" alt="image-20230411175439690"></p><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><h3 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a><strong>发布文章</strong></h3><p>进入博客所在目录，右键打开 Git Bash Here，创建博文：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;My New Post&quot;</span><br></pre></td></tr></table></figure><p>然后 source 文件夹中会出现一个 My New Post.md 文件，就可以使用 Markdown 编辑器在该文件中撰写文章了。</p><p>写完后运行下面代码将文章渲染并部署到 GitHub Pages 上完成发布。<strong>以后每次发布文章都是这两条命令。</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g   # 生成页面</span><br><span class="line">hexo d   # 部署发布</span><br></pre></td></tr></table></figure><p>也可以不使用命令自己创建 .md 文件，只需在文件开头手动加入如下格式 Front-matter 即可，写完后运行 <code>hexo g</code> 和 <code>hexo d</code> 发布。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World # 标题</span><br><span class="line">date: 2019/3/26 hh:mm:ss # 时间</span><br><span class="line">categories: # 分类</span><br><span class="line">- Diary</span><br><span class="line">tags: # 标签</span><br><span class="line">- PS3</span><br><span class="line">- Games</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Learning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/04/11/hello-world/"/>
    <url>/2023/04/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
